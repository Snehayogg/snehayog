name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.3'
        channel: 'stable'
    
    - name: Get dependencies
      working-directory: ./snehayog with frontend
      run: flutter pub get
    
    - name: Verify the installation
      working-directory: ./snehayog with frontend
      run: flutter doctor -v
    
    - name: Run analyzer
      working-directory: ./snehayog with frontend
      run: flutter analyze --fatal-infos
    
    - name: Run formatter check
      working-directory: ./snehayog with frontend
      run: dart format --output=none --set-exit-if-changed .
    
    - name: Run tests
      working-directory: ./snehayog with frontend
      run: flutter test --coverage
    
    - name: Run integration tests
      working-directory: ./snehayog with frontend
      run: flutter test integration_test/
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./snehayog with frontend/coverage/lcov.info
        fail_ci_if_error: false

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.3'
        channel: 'stable'
    
    - name: Get dependencies
      working-directory: ./snehayog with frontend
      run: flutter pub get
    
    - name: Build APK
      working-directory: ./snehayog with frontend
      run: flutter build apk --release
    
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: app-release.apk
        path: snehayog with frontend/build/app/outputs/flutter-apk/app-release.apk

  backend-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './snehayog nodejs backend/package-lock.json'
    
    - name: Install dependencies
      working-directory: ./snehayog nodejs backend
      run: npm ci
    
    - name: Run backend linting
      working-directory: ./snehayog nodejs backend
      run: |
        # Add linting script if not exists
        if ! npm run lint 2>/dev/null; then
          echo "No lint script found, installing ESLint..."
          npm install --save-dev eslint
          echo "Skipping lint for now, please add ESLint configuration"
        fi
    
    - name: Run backend tests
      working-directory: ./snehayog nodejs backend
      run: |
        if ! npm test 2>/dev/null; then
          echo "No test script found, please add tests to prevent backend regressions"
          exit 0
        fi
